/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sauvik.bhowmik.anik;

import java.awt.Color;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 *
 * @author ANIK
 */
public class CaeserCipher extends javax.swing.JFrame {

    /**
     * Creates new form CaeserCipher
     */
    public CaeserCipher() {
        initComponents();
        getContentPane().setBackground(Color.white);
    }
    
    
     List<String> myList = new ArrayList<String>();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        inputField = new javax.swing.JTextField();
        encryptButton = new javax.swing.JButton();
        decryptButton = new javax.swing.JButton();
        outputDisplay = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(675, 425));
        setResizable(false);
        getContentPane().setLayout(null);

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(0, 0, 204));
        jTextField1.setText("    Caeser Cipher");
        jTextField1.setBorder(null);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1);
        jTextField1.setBounds(210, 10, 290, 50);

        jTextField2.setEditable(false);
        jTextField2.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jTextField2.setText("Enter Your String:");
        jTextField2.setBorder(null);
        getContentPane().add(jTextField2);
        jTextField2.setBounds(30, 100, 160, 40);

        inputField.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        getContentPane().add(inputField);
        inputField.setBounds(210, 90, 310, 60);

        encryptButton.setBackground(new java.awt.Color(255, 0, 0));
        encryptButton.setFont(new java.awt.Font("Arial Black", 2, 12)); // NOI18N
        encryptButton.setText("Encrypt");
        encryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptButtonActionPerformed(evt);
            }
        });
        getContentPane().add(encryptButton);
        encryptButton.setBounds(550, 90, 100, 27);

        decryptButton.setBackground(new java.awt.Color(0, 153, 0));
        decryptButton.setFont(new java.awt.Font("Arial Black", 2, 12)); // NOI18N
        decryptButton.setText("Decrypt");
        decryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptButtonActionPerformed(evt);
            }
        });
        getContentPane().add(decryptButton);
        decryptButton.setBounds(550, 120, 100, 27);

        outputDisplay.setEditable(false);
        outputDisplay.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        outputDisplay.setBorder(null);
        getContentPane().add(outputDisplay);
        outputDisplay.setBounds(210, 250, 320, 50);

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\ANIK\\Downloads\\caeser.png")); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(50, 10, 100, 90);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void encryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptButtonActionPerformed
        String inputText = inputField.getText();
        for(int i=0;i<inputText.length();i++){
            int inputTextValue = inputText.charAt(i);
            
            char letter;
            
            if(inputTextValue<97){
                if(inputTextValue<68){
                    if(inputTextValue == 13 || inputTextValue == 32){
                        letter = (char)inputTextValue;
                        myList.add(""+letter);
                        //output.setText(""+letter);
                    }
                    else{
                        inputTextValue = inputTextValue + 23;
                    letter = (char)inputTextValue;
                    myList.add(""+letter);
                    //output.setText(""+letter);
                    }
                }
                else{
                inputTextValue = inputTextValue - 3;
                letter = (char)inputTextValue;
                myList.add(""+letter);
                //output.setText(""+letter);
                }
            }
            else{
               if(inputTextValue < 100){
                   inputTextValue = inputTextValue + 23;
                   letter = (char)inputTextValue;
                   myList.add(""+letter);
                   //output.setText(""+letter);
               }
               else{
                   inputTextValue = inputTextValue - 3;
                   letter = (char)inputTextValue;
                   myList.add(""+letter);
                  // output.setText(""+letter);
               }
            }
        }
        String list = Arrays.toString(myList.toArray()).replace("[", "").replace("]", "").replace("", " ").replace(",","").replaceAll("\\s{2}", "");
        outputDisplay.setText("Your Encrypted Text:"+list);
    }//GEN-LAST:event_encryptButtonActionPerformed

    private void decryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptButtonActionPerformed
        String inputText = inputField.getText();
        for(int i=0;i<inputText.length();i++){
            int inputTextValue = inputText.charAt(i);
            
            char letter;
            
            if(inputTextValue<97){
                if(inputTextValue<88){
                    if(inputTextValue == 13 || inputTextValue == 32){
                        letter = (char)inputTextValue;
                        myList.add(""+letter);
                        //output.setText(""+letter);
                    }
                    else{
                        inputTextValue = inputTextValue + 3;
                    letter = (char)inputTextValue;
                    myList.add(""+letter);
                    //output.setText(""+letter);
                    }
                }
                else{
                inputTextValue = inputTextValue - 23;
                letter = (char)inputTextValue;
                myList.add(""+letter);
                //output.setText(""+letter);
                }
            }
            else{
               if(inputTextValue < 120){
                   inputTextValue = inputTextValue + 3;
                   letter = (char)inputTextValue;
                   myList.add(""+letter);
                   //output.setText(""+letter);
               }
               else{
                   inputTextValue = inputTextValue - 23;
                   letter = (char)inputTextValue;
                   myList.add(""+letter);
                  // output.setText(""+letter);
               }
            }
        }
        String list = Arrays.toString(myList.toArray()).replace("[", "").replace("]", "").replace("", " ").replace(",","").replaceAll("\\s{2}", "");
        outputDisplay.setText("Your Decrypted Text:"+list);
    }//GEN-LAST:event_decryptButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CaeserCipher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CaeserCipher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CaeserCipher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CaeserCipher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new CaeserCipher().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton decryptButton;
    private javax.swing.JButton encryptButton;
    private javax.swing.JTextField inputField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField outputDisplay;
    // End of variables declaration//GEN-END:variables
}
